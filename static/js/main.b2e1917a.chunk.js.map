{"version":3,"sources":["Components/SearchBar.js","Components/CharacterCard.js","Components/SelectionModal.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","error","isloading","seterror","getcharacter","useState","input","setinput","Row","className","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","valur","onChange","target","value","Text","Button","type","Spinner","as","animation","size","role","aria-hidden","CharacterCard","characterInfo","console","log","powers","Object","keys","powerstats","values","Col","src","image","url","alt","biography","work","map","power","style","padding","ProgressBar","now","label","SelectionModal","show","setshow","setcharacterInfo","characterList","selectedItem","setSelectedItem","handleChange","Modal","Header","Title","Body","chosenOne","find","item","id","character","Check","checked","App","setloading","setcharacterList","superHeroname","a","fetch","response","json","data","ok","Error","fildata","results","filter","toLowerCase","name","length","message","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2e1917a.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Row , Button, Form , Spinner} from 'react-bootstrap';\r\n\r\nfunction SearchBar({error,isloading, seterror , getcharacter}) {\r\n\r\n  const [input,setinput] = useState('');\r\n  \r\n  function hc(e) {\r\n    seterror(null);\r\n    setinput(e.target.value);\r\n  }\r\n\r\n  \r\n  \r\n  const hs=(e)=>{\r\n    e.preventDefault();\r\n    getcharacter(input);\r\n    setinput('');\r\n  }\r\n  return (\r\n    <Row className=\"justify-content-md-center\">\r\n      <Form onSubmit={hs}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Search for a superhero or super villian</Form.Label>\r\n          <Form.Control  placeholder=\"e.g. SuperMan\" valur={input} onChange={hc} />\r\n          {error ?<Form.Text  className=\"text-muted\">\r\n            {error}\r\n          </Form.Text> :null}\r\n        </Form.Group>\r\n        {isloading ?<Button type=\"submit\"><Spinner\r\n      as=\"span\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    <span className=\"sr-only\">Loading...</span></Button>: <Button type=\"submit\">Get Character</Button>}\r\n      </Form>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport {Row , Col , ProgressBar} from 'react-bootstrap';\r\n\r\nfunction CharacterCard(characterInfo) {\r\n  console.log(characterInfo);\r\n  const powers =Object.keys(characterInfo.characterInfo.powerstats);\r\n  const pows = Object.values(characterInfo.characterInfo.powerstats);\r\n  return (\r\n    <Row className=\"justify-content-md-center\">\r\n      <Col className=\"abc\">\r\n        <h1>Character</h1>\r\n        <img src={characterInfo.characterInfo.image.url} alt=\"profile\" />\r\n      </Col>\r\n      <Col>\r\n        <h1>Name: {characterInfo.characterInfo.biography['full-name']}</h1>\r\n        <h1>WORK: {characterInfo.characterInfo.work['occupation']}</h1>\r\n        {powers.map(power=>(<div style={{padding:10}}>\r\n          <h3>{power}</h3>\r\n          <ProgressBar now={characterInfo.characterInfo.powerstats[power]} label={`${characterInfo.characterInfo.powerstats[power]}`}/>\r\n        </div>))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nconst SelectionModal = ({ show, setshow, setcharacterInfo, characterList }) => {\r\n  const [selectedItem, setSelectedItem] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedItem(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let chosenOne = characterList.find((item) => item.id === selectedItem);\r\n    setcharacterInfo(chosenOne);\r\n    setshow(false);\r\n  };\r\n\r\n  return (\r\n    <Modal className=\"my-moodal\" show={show}>\r\n      <Modal.Header>\r\n        <Modal.Title>Which one?</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form className=\"myForm\"  onSubmit={handleSubmit}>\r\n          {characterList\r\n            ? characterList.map((character) => {\r\n                return (\r\n                  <Form.Check\r\n                    type='radio'\r\n                    value={character.id}\r\n                    checked={selectedItem === character.id}\r\n                    label={`${character.biography['full-name']}`}\r\n                    onChange={handleChange}\r\n                    key={character.id}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n          <Button type='submit'>Submit</Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SelectionModal;\r\n","import React,{useState} from 'react';\nimport SearchBar from \"./Components/SearchBar\";\nimport \"./App.css\";\nimport CharacterCard from \"./Components/CharacterCard\";\nimport SelectionModal from \"./Components/SelectionModal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container,Row} from 'react-bootstrap';\n\n\n\n\nfunction App() {\n\n  const[characterInfo,setcharacterInfo]=useState();\n  const [error,seterror]= useState(null);\n  const [isloading,setloading] = useState(false);\n  const [show,setshow]= useState(false);\n  const [characterList,setcharacterList]=useState(null);\n  \n  \n  const getcharacter=async (superHeroname)=>{\n    setloading(true);\n    try {\n      const response=await fetch(`https://cors-anywhere.herokuapp.com/https://superheroapi.com/api/1560787344116671/search/${superHeroname}`);\n      const data = await response.json();\n      if(!response.ok || data.response==='error'){\n        throw Error(`\"${superHeroname}\" not found`);\n      }\n      const fildata = data.results.filter((item)=>superHeroname.toLowerCase() === item.name.toLowerCase());\n      setcharacterList(fildata);\n      if(fildata.length ===1){\n        setcharacterInfo(fildata[0]);\n      }\n      else{\n        setshow(true);\n      }\n    } catch (err) {\n      seterror(err.message);\n      setcharacterInfo(null);\n    }\n    setloading(false);\n  };\n  \n  \n  return (\n    <Container  >\n      \n      <Row  className=\"justify-content-md-center\">\n      <h1>SuperHeros VS Villians</h1>\n      </Row>\n      <SearchBar  isloading={isloading} error={error} seterror={seterror} getcharacter={getcharacter}/>\n      <SelectionModal show={show} setshow={setshow} characterList={characterList} setcharacterInfo={setcharacterInfo} />\n      {characterInfo && !error ?<CharacterCard characterInfo={characterInfo} /> : null }\n    </Container>\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode >\n    <div >\n      <App/>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}